{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","AppHeader","liked","allPosts","SearchPanel","props","onUpdateSearch","e","term","target","value","setState","state","className","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","Button","key","color","outline","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAdd","AppBlock","App","deleteItem","data","index","findIndex","elem","slice","addItem","body","newItem","maxId","old","searchPost","items","lentgh","indexOf","filterPost","length","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f0de69e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n    }\r\n    p {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header>\r\n            <h1>Alexander Shirykalov</h1>\r\n            <p>{allPosts} записей, из них понравилось {liked}</p>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n    }\r\n\r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            if (this.props.filter === name) {\r\n                return(\r\n                    <Button key={name} \r\n                        color=\"info\" \r\n                        >{label}</Button>\r\n                )\r\n            } else {\r\n                return(\r\n                    <Button outline\r\n                        color=\"secondary\"\r\n                        key={name} \r\n                        onClick={() => this.props.onFilterSelect(name)}>{label}</Button>\r\n                )\r\n            }\r\n            \r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n        if (important) classNames += \" important\";\r\n        if (like) classNames += \" like\";\r\n\r\n        return(\r\n            <div className={classNames}>\r\n                <span \r\n                    className=\"app-list-item-label\"\r\n                    onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}\r\n                    >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\n\r\n\r\nimport './post-list.scss';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        if (typeof item == \"object\") {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={id} className=\"list-group-item\">\r\n                    <PostListItem {...itemProps} \r\n                        onDelete={() => onDelete(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleLiked={() => onToggleLiked(id)} />\r\n                </li>\r\n            )\r\n        } else {\r\n            return false;\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    )    \r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit =(e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"О чём Вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\" >\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`\r\n\r\nexport default class App extends Component  {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'Goooood', important: false, like: false, id: 2},\r\n                {label: 'Break pls', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)]\r\n            return{\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem = (body) => {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchPost = (items, term) => {\r\n        if (term.lentgh === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n\r\n    filterPost = (items, filter) => {\r\n        if (filter === 'like') {\r\n            return items.filter( item => item.like )\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render(){\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter) ;\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem} \r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked} />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </AppBlock> \r\n        )\r\n    }   \r\n}","import App from './app';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}